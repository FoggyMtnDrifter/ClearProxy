name: Docker Build and Publish

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  REPO_LOWER: ${{ format('{0}/{1}', github.repository_owner, github.event.repository.name) }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Convert repository name to lowercase
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}
          tags: |
            # Tag with 'latest' for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag with version when a version tag is pushed
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # Always tag with short SHA
            type=sha,format=short
            # Tag with branch name for PRs and non-main branches
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Debug image info
        run: |
          echo "Repository name: ${{ env.REPO_NAME }}"
          echo "Image reference: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}"
          echo "Available tags:"
          echo "${{ steps.meta.outputs.tags }}" 